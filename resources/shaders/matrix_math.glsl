// please note, all code in this file was clearly generated by claude, I do not know the linear algebra for this.

mat4 translate(vec3 t) {
    return mat4(
    1.0, 0.0, 0.0, 0.0,  // Column 0
    0.0, 1.0, 0.0, 0.0,  // Column 1
    0.0, 0.0, 1.0, 0.0,  // Column 2
    t.x, t.y, t.z, 1.0   // Column 3 (translation)
    );
}

mat4 scale(vec3 s) {
    return mat4(
    s.x, 0.0, 0.0, 0.0,  // Column 0
    0.0, s.y, 0.0, 0.0,  // Column 1
    0.0, 0.0, s.z, 0.0,  // Column 2
    0.0, 0.0, 0.0, 1.0   // Column 3
    );
}

mat4 rotateX(float angle) {
    float c = cos(angle);
    float s = sin(angle);
    return mat4(
    1.0, 0.0, 0.0, 0.0,  // Column 0
    0.0,   c,   s, 0.0,  // Column 1
    0.0,  -s,   c, 0.0,  // Column 2
    0.0, 0.0, 0.0, 1.0   // Column 3
    );
}

mat4 rotateY(float angle) {
    float c = cos(angle);
    float s = sin(angle);
    return mat4(
    c, 0.0,  -s, 0.0,  // Column 0
    0.0, 1.0, 0.0, 0.0,  // Column 1
    s, 0.0,   c, 0.0,  // Column 2
    0.0, 0.0, 0.0, 1.0   // Column 3
    );
}

mat4 rotateZ(float angle) {
    float c = cos(angle);
    float s = sin(angle);
    return mat4(
    c,   s, 0.0, 0.0,  // Column 0
    -s,   c, 0.0, 0.0,  // Column 1
    0.0, 0.0, 1.0, 0.0,  // Column 2
    0.0, 0.0, 0.0, 1.0   // Column 3
    );
}

// Rotate around arbitrary axis
mat4 rotate(float angle, vec3 axis) {
    axis = normalize(axis);
    float c = cos(angle);
    float s = sin(angle);
    float t = 1.0 - c;
    float x = axis.x;
    float y = axis.y;
    float z = axis.z;

    return mat4(
    t*x*x + c,   t*x*y + s*z, t*x*z - s*y, 0.0,  // Column 0
    t*x*y - s*z, t*y*y + c,   t*y*z + s*x, 0.0,  // Column 1
    t*x*z + s*y, t*y*z - s*x, t*z*z + c,   0.0,  // Column 2
    0.0,         0.0,         0.0,         1.0   // Column 3
    );
}

mat4 rotateAboutYAxis(float angle, float axisAngle) {
    vec3 axis = vec3(cos(axisAngle), 0, sin(axisAngle));
    return rotate(angle, axis);
}